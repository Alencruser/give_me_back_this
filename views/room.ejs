<%- include('partials/head')%>
<!-- recuperer l'id de la room ici pour creer une room io -->
<h2 class="ui centered grid" style="color:#fff	">Bienvenue sur la room <%=room%></h2><br>
<hr>
<div class="field">
	<div class="ui red label">
		<label class='white' for="music">Lien youtube</label>
	</div>
</div>
<div class="ui input">
	<input type="text" name="music" id="music">
</div>
<button class="ui red button" id="ebfei">Lancer une playlist</button>
<hr><br>
<center><input type="range" min="0" max="100" step="1" style="padding:0;margin-bottom:16px;" id="sliderJs"></center>
<div class="ui centered grid" id="containPlayer">
	<div id="blbl">
	</div>
</div>
<script>

	setTimeout(() => {


		let playlist = [];
		var player;


		function onYouTubeIframeAPIReady() {

		}


		// 4. The API will call this function when the video player is ready.
		function onPlayerReady(event) {
			event.target.playVideo();
		}

		var done = false;
		function onPlayerStateChange(event) {
			if (event.data == YT.PlayerState.ENDED) {
				if (playlist.length) {
					player.loadVideoById(playlist[0]);
					playlist.shift();
				} else {
					div = document.createElement('div');
					div.id = "blbl";
					document.getElementById('containPlayer').removeChild(document.getElementById('blbl'));
					document.getElementById('containPlayer').appendChild(div);
					player = undefined;
				}
			}
		}
		function stopVideo() {
			player.stopVideo();
		}

		//socket part
		let socket = io('', { query: "room=" + "<%=room%>" });

		document.getElementById('ebfei').addEventListener('click', (e) => {
			socket.emit('video', document.getElementById('music').value);
			document.getElementById('music').value = "";
		});

		//receptionner levenement join pour envoyer le player et player pour l'itegrer

		socket.on('join', function () {
			if (player) {
				socket.emit('join', { player: player, list: playlist });
			}
		});

		socket.on('player', function (play, list) {
			let currentTime = play.l.currentTime
			let videoId = play.l.videoUrl.split('v=')[1];
			if (!player) {
				playlist = list;
				setTimeout(() => {

					player = new YT.Player('blbl', {
						height: '360',
						width: '620',
						playerVars: { 'controls': 0, 'iv_load_policy': 3, 'showinfo': 0, 'rel': 0 },
						events: {
							'onReady': function () {
								player.loadVideoById(videoId, currentTime + 2.5);
								player.pauseVideo();
								player.playVideo();
							},
							'onStateChange': onPlayerStateChange

						}
					});
				})
			} else {
			}
		})


		socket.on('video', function (url) {
			//player youtube
			if (!player) {
				player = new YT.Player('blbl', {
					height: '360',
					width: '620',
					videoId: url,
					playerVars: { 'controls': 0, 'iv_load_policy': 3, 'showinfo': 0, 'rel': 0 },
					events: {
						'onReady': onPlayerReady,
						'onStateChange': onPlayerStateChange
					}
				});
			} else {
				playlist.push(url);
			}
		});


		$('#sliderJs').rangeslider({
			rangeClass: 'rangeslider',
			horizontalClass: 'rangeslider--horizontal'
		});
		document.getElementById('sliderJs').addEventListener('change', (e) => {
			value = document.getElementById('sliderJs').value;
			if (player) {
				player.setVolume(value);
			}
		});

	}, 1500);

</script>

<%-include('partials/foot')%>