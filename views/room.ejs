<%- include('partials/head')%>
<!-- recuperer l'id de la room ici pour creer une room io -->
<h2 class="ui centered grid" style="color:#fff	">Bienvenue sur la room <%=room%></h2><br>
<hr>
<div class="field">
	<div class="ui red label">
		<label class='white' for="music">Lien youtube</label>
	</div>
</div>
<div class="ui input">
	<input type="text" name="music" id="music">
</div>
<button class="ui red button" id="ebfei">Lancer une playlist</button>
<hr><br>
<div class="ui centered grid" id="containPlayer">
	<div id="blbl">
	</div>
</div>
<script>
	let playlist = [];
	var player;

	function onYouTubeIframeAPIReady() {

	}


	// 4. The API will call this function when the video player is ready.
	function onPlayerReady(event) {
		event.target.playVideo();
	}

	var done = false;
	function onPlayerStateChange(event) {
		if (event.data == YT.PlayerState.ENDED) {
			console.log('fin de musique');
			if (playlist.length) {
				player.loadVideoById(playlist[0]);
				playlist.shift();
			}else {
				div = document.createElement('div');
				div.id ="blbl";
				document.getElementById('containPlayer').removeChild(document.getElementById('blbl'));
				document.getElementById('containPlayer').appendChild(div);
				player = undefined;
			}
		} else if ( event.data == -1 ) {
			console.log('je suis en pause');
			event.data = 1;
		}
		console.log(event.data);
		console.log('youtube player', player)
	}
	function stopVideo() {
		player.stopVideo();
	}

	//socket part
	let socket = io('', { query: "room=" + "<%=room%>" });

	document.getElementById('ebfei').addEventListener('click', (e) => {
		socket.emit('video', document.getElementById('music').value);
		document.getElementById('music').value = "";
	});

	//receptionner levenement join pour envoyer le player et player pour l'itegrer

	socket.on('join', function(){
		if(player){
			socket.emit('join',{player:player,list:playlist});
		}
	});

	socket.on('player',function(play,list){
		console.log('trouver le bon id FS',play);
		let currentTime = play.l.currentTime
		let videoId = play.l.videoUrl.split('v=')[1];
		console.log('check de la video ID',videoId);
		console.log('currenturlPLS',play);
		if(!player){
			console.log('je craft le player');
			playlist = list;
			setTimeout(()=>{

				player = new YT.Player('blbl', {
					height: '360',
					width: '620',
					playerVars: { 'controls': 0, 'iv_load_policy': 3, 'showinfo': 0, 'rel': 0 },
					events: {
						'onReady': function(){
							player.loadVideoById(videoId,currentTime+2.5);
							console.log('this onready',this);
							console.log('player onready',player);
							console.log('state en cours',player.PlayerState);
							console.log('state en cours v2',player.data);
							console.log('getplayerstate',player.getPlayerState());
							player.pauseVideo();
							player.playVideo();
						},
						'onStateChange': onPlayerStateChange,
						'onError': function(e){
							console.log(e.data);
							console.log(e);
						}
					}
				});
			})
		} else {
			console.log('jai deja mon player')
		}
	})


	socket.on('video', function (url) {
		//player youtube
		if (!player) {
			player = new YT.Player('blbl', {
				height: '360',
				width: '620',
				videoId: url,
				playerVars: { 'controls': 0, 'iv_load_policy': 3, 'showinfo': 0, 'rel': 0 },
				events: {
					'onReady': onPlayerReady,
					'onStateChange': onPlayerStateChange
				}
			});
		} else {
			playlist.push(url);
		}
	})
</script>

<%-include('partials/foot')%>